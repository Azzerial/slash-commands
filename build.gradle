/*
 * Copyright 2021 Robin Mercier
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext.moduleName = 'slash-command'

allprojects {
    group = 'com.github.azzerial'
    version = '1.0'

    ext {
        annotationsVersion = '22.0.0'
        jdaVersion = '4.3.0_313'
        junitVersion = '5.7.2'
        logbackVersion = '1.2.3'
        slf4jVersion = '1.7.32'

        dependencies {
            annotations = { [group: 'org.jetbrains', name: 'annotations', version: annotationsVersion] }
            jda = { [group: 'net.dv8tion', name: 'JDA', version: jdaVersion] }
            logback = { [group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion] }
            slf4j = { [group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion] }
            junit = { [group: 'org.junit.jupiter', name: 'junit-jupiter', version: junitVersion] }
        }
    }
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven { url 'https://m2.dv8tion.net/releases' }
    }

    dependencies {
        implementation annotations()
        implementation slf4j()
        testImplementation junit()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    test {
        useJUnitPlatform()
        failFast = true
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}
